---
// interface Props{
//   opensheetstring:string;
// }

// const { opensheetstring } = Astro.props as Props;
---
<dialog id="uploaddialog" style="background-color: rgb(60, 61, 63);width :30%;">
  <div class="text-theme-text shadow-xl rounded-md w-full max-w-x backdrop:bg-black/60" style="background-color: rgb(39, 41, 43);">
    <div class="p-4 sm:p-8 grid gap-6">
      <form class="grid gap-4" id="upload-form" enctype="multipart/form-data">
        <h2 class="text-xl text-theme-accent font-bold leading-tight">上传Excel文件</h2>
        <div class="grid gap-2">
          <div class="flex items-center gap-2">
            <label class="text-sm font-medium w-1/3">选择文件</label>
            <input type="file" name="excelFile" accept=".xlsx, .xls" class="w-2/3 p-2 border border-gray-300 rounded-md"  />
          </div>
          <div class="flex items-center gap-2">
            <label class="text-sm font-medium w-1/3">选择Opensheet</label>
            <input type="text" name="opensheetstring"  class="w-2/3 p-2 border border-gray-300 rounded-md" />
          </div>
        </div>
        <div class="flex justify-end gap-4 mt-4">
          <button type="button" class="px-4 py-2 bg-primary text-white rounded-md" id="close-upload-dialog">Close</button>
          <button type="submit" class="px-4 py-2 bg-accent text-white rounded-md">Upload</button>
        </div>
      </form>
    </div>
  </div>
</dialog>

<script>
import type { APIRoute } from "astro";

 
document.addEventListener("DOMContentLoaded", () => {
  const uploadForm = document.getElementById("upload-form")! as HTMLFormElement ;
  const closeUploadDialogBtn = document.getElementById("close-upload-dialog") as HTMLButtonElement | null;
  const uploadDialog = document.getElementById("upload-dialog")  as HTMLButtonElement | null;
  const dialog3=document.getElementById("uploaddialog") as HTMLDialogElement | null;

  if (!uploadForm || !closeUploadDialogBtn || !dialog3) {
      console.error("One or more elements are missing");
      return;
    }

  uploadDialog.addEventListener("click", () => dialog3.showModal());
  closeUploadDialogBtn.addEventListener("click", () => dialog3.close());
 
  dialog3.addEventListener("click", (e) => {
    if (e.target === e.currentTarget) {
      dialog3.close();
    }
  });

    //form内解析文件上传.
   
    uploadForm.addEventListener("submit", async (event) => {
    event.preventDefault();
    try{
      const formDatas = new FormData(uploadForm);
      const opensheetstring =formDatas.get("opensheetstring");
      const address =`https://opensheet.elk.sh/${opensheetstring}`;
      //  默认 1ge-pyzr0uMTxlALiiUh_sEzdVo1ikGJGavLF04u6AVU/1
      const response = await fetch (address);
      const data = await response.json();
      console.log("good")
      if (!data) {
          return {
            status: 404,
          }} 
          else
           {
          dialog3?.close();
          // location.reload();
          }
         console.log(data);
          //处理数据

        for (const item of data) {
            const serverResponse = await fetch(`/api/process-data.json`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(item),
          });
          const result = await serverResponse.json();
           
          if (result.success) {
            alert("Data processed successfully!");
            dialog3.close();
          } else {
            alert("There was an error processing the data.");
          }
        }
          } catch (error) {
  if (error instanceof Error) { // 使用 instanceof 进行类型检查
    alert(error.message); // 确保 error 是 Error 类型
  } else {
    console.error('An unknown error occurred:', error);
  }
}
    });
  });
    
</script>
